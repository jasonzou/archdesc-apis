// Code generated by goctl. DO NOT EDIT!
// Source: taxonomy.proto

package taxonomies

import (
	"context"

	"archdesc-apis/app/taxonomy/cmd/rpc/pb/taxonomy"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReqGetAll     = taxonomy.ReqGetAll
	ReqTaxonomyId = taxonomy.ReqTaxonomyId
	RespGetAll    = taxonomy.RespGetAll
	Taxonomy      = taxonomy.Taxonomy

	Taxonomies interface {
		Get(ctx context.Context, in *ReqTaxonomyId, opts ...grpc.CallOption) (*Taxonomy, error)
		GetAll(ctx context.Context, in *ReqGetAll, opts ...grpc.CallOption) (*RespGetAll, error)
	}

	defaultTaxonomies struct {
		cli zrpc.Client
	}
)

func NewTaxonomies(cli zrpc.Client) Taxonomies {
	return &defaultTaxonomies{
		cli: cli,
	}
}

func (m *defaultTaxonomies) Get(ctx context.Context, in *ReqTaxonomyId, opts ...grpc.CallOption) (*Taxonomy, error) {
	client := taxonomy.NewTaxonomiesClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultTaxonomies) GetAll(ctx context.Context, in *ReqGetAll, opts ...grpc.CallOption) (*RespGetAll, error) {
	client := taxonomy.NewTaxonomiesClient(m.cli.Conn())
	return client.GetAll(ctx, in, opts...)
}
